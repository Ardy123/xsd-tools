[@lua
include 'c-xml-expat-dom/baseType'

unsignedInteger = {}
unsignedInteger.__index = unsignedInteger
setmetatable(unsignedInteger, {__index = baseType})

function unsignedInteger:new(typeFactory, typedef)
   local retObj = baseType:new(typeFactory, typedef)
   setmetatable(retObj, unsignedInteger)
   return retObj
end

function unsignedInteger:instanceOf()
   return "unsignedInteger"
end

function unsignedInteger:typeName()
   return ("xml_unsignedInteger")
end

function unsignedInteger:typeDef()
   return ("typedef uint64_t * %s;\n"):format(self:typeName())
end

function unsignedInteger:typeFactoryMethods()
   return ""
end

function unsignedInteger:defMarshal(elementName)
   out = stringBuffer:new()
   out:append("static void\n")
   out:append("_xml_unsignedInteger_marshal")
   out:append("(const xml_unsignedInteger pVal, char ** ppOut, const xml_typeFactory * pFactory) {\n")
   out:append("  char num[64];\n")
   out:append("  snprintf(num, 64, \"%lu\", *pVal);\n")
   out:append("  _cstr_append(ppOut, num, pFactory);\n")
   out:append("}\n")   
   return out:str()
end

function unsignedInteger:defUnmarshal(elementName)
   out = stringBuffer:new()
   out:append("static xml_unsignedInteger\n")
   out:append("_xml_unsignedInteger_unmarshal(")
   out:append("const char * pVal, const xml_typeFactory * pFactory) {\n")
   out:append("  xml_unsignedInteger val = ReallocateMemory(pFactory, NULL, sizeof(int64_t));\n")
   out:append("  return (*val  = strtoul(pVal, NULL, 0)), val;\n")
   out:append("}\n")
   return out:str()
end

function unsignedInteger:defDestroy()
   out = stringBuffer:new()
   out:append("static xml_unsignedInteger\n")
   out:append("_xml_unsignedInteger_destroy")
   out:append("(xml_unsignedInteger pVal, const xml_typeFactory * pFactory) {\n")
   out:append("  if (pVal) pVal = ReallocateMemory(pFactory, pVal, 0);\n")
   out:append("  return pVal;\n")
   out:append("}\n")
   return out:str()
end

function unsignedInteger:test()
   return "499403223"
end
]
