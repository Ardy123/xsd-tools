[@lua
include 'c-xml-expat-dom/baseType'

short = {}
short.__index = short
setmetatable(short, {__index = baseType})

function short:new(typeFactory, typedef)
   local retObj = baseType:new(typeFactory, typedef)
   setmetatable(retObj, short)
   return retObj
end

function short:typeName()
   return ("xml_short")
end

function short:typeDef()
   return ("typedef int16_t * %s;\n"):format(self:typeName())
end

function short:typeFactoryMethods()
   return ""
end

function short:defMarshall(elementName)
   out = stringBuffer:new()
   out:append("static void")
   out:append("_xml_short_marshall")
   out:append("(const xml_short pVal, char ** ppOut, const xml_typeFactory * pFactory) {\n")
   out:append("\tchar num[8];\n")
   out:append("\tsnprintf(num, 8, \"%d\", *pVal);\n")
   out:append("\t_cstr_append(ppOut, num, pFactory);\n")
   out:append("}\n")   
   return out:str()
end

function short:defUnmarshall(elementName)
   out = stringBuffer:new()
   out:append("static xml_short\n")
   out:append("_xml_short_unmarshall(")
   out:append("const char * pVal, const xml_typeFactory * pFactory) {\n")
   out:append("\txml_short val = ReallocateMemory(pFactory, NULL, sizeof(int16_t));\n")
   out:append("\treturn (*val  = atoi(pVal)), val;\n")
   out:append("}\n")
   return out:str()
end

function short:defDestroy()
   out = stringBuffer:new()
   out:append("static xml_short\n")
   out:append("_xml_short_destroy")
   out:append("(xml_short pVal, const xml_typeFactory * pFactory) {\n")
   out:append("\tif (pVal) pVal = ReallocateMemory(pFactory, pVal, 0);\n")
   out:append("\treturn pVal;\n")
   out:append("}\n")
   return out:str()
end

function short:test()
   return "29832"
end
]
