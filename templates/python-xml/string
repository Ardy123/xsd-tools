[@lua --define python String type
	pythontype_string = {
		marshal = {
			attribute = function(attribName)
				return table.concat({
					"        stream.write(' ", attribName, "=\"' + self._", attribName, " + '\"')\n",
				})
			end,
			content = function()
				return table.concat({
					"        for node in self.getContent():\n",
					"            if isinstance(node, _xmlelement):\n",
					"                node.marshal(stream)\n",
					"            else:\n",
					"                stream.write(str(node))\n",
				})
			end,
		},
		unmarshal = {
			attribute = function(attribName)
				return table.concat({
					"            if \"", attribName, "\" == attribute:\n",
					"                self._", attribName, " = attributes[attribute]\n",
				})
			end,
			content = function()
				return table.concat({
					"        self._content = content\n"
				})
			end
		},
		default = function(attribName, value)
			return table.concat({"        self._", attribName, " = \"", value, "\"\n"})
		end,
		test = {
			assign = function()
				local tbl = { 'arch', 'Ancestor', 'Interaction', 'Productivity', 'Jelly', 'Glue', 'Way'}
				return tbl[math.random(1, #tbl)]
			end,
		},
	}
]