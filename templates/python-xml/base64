[@lua --define python base64 type
	pythontype_base64 = {
		marshal = {
			attribute = function(attributeName)
				return table.concat({
					"        stream.write(' ", attributeName, " = \\'' + self._", attributeName, ".encode(\"base64\") + '\\'')\n",
				})
			end,
			content = function()
				return table.concat({
					"        stream.write(self.getContent()[0].encode(\"base64\"))\n",
				})
			end,
		},
		unmarshal = {
			attribute = function(attribName)
				return table.concat({
					"            if \"", attribName, "\" == attribute:\n",
					"                self._", attribName, " = attributes[attribute].decode(\"base64\")\n",
				})
			end,
			content = function()
				return table.concat({
					"        self._content = [content[0].decode(\"base64\")]\n"
				})
			end
		},
		default = function(attribName, value)
			return table.concat({"        self._", attribName, " = \"", value, "\".decode(\"base64\")\n"})
		end,
		test = {
			assign = function()
				   local ret = {
				   		 "Q3yj/lYzNI0Fp0SrC8sctw==\\n",
				   		 "kpxzQiW1uLkFessP+5xZjQ==\\n",
						 "/kFxXF8edN6Dt3L99Y6aFQ==\\n",
						 "PceWThKB0OQoYk6O0nigSw==\\n",
						 "KDk10Nf+vS+JrzsYzRuDRw==\\n" }
				   return ret[math.random(1, 5)]
			end,
		},
	}
]