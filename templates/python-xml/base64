[@lua --define python base64 type
	pythontype_base64 = {
		marshall = {
			attribute = function(attributeName)
				return table.concat({
					"\t\tstream.write(' ", attributeName, " = \\'' + self._", attributeName, ".encode(\"base64\") + '\\'')\n",
				})
			end,
			content = function()
				return table.concat({
					"\t\tstream.write(self.getContent()[0].encode(\"base64\"))\n",
				})
			end,
		},
		unmarshall = {
			attribute = function(attribName)
				return table.concat({
					"\t\t\tif \"", attribName, "\" == attribute:\n",
					"\t\t\t\tself._", attribName, " = attributes[attribute].decode(\"base64\")\n",
				})
			end,
			content = function()
				return table.concat({
					"\t\tself._content = [content[0].decode(\"base64\")]\n"
				})
			end
		},
		default = function(attribName, value)
			return table.concat({"\t\tself._", attribName, " = \"", value, "\".decode(\"base64\")\n"})
		end,
		test = {
			assign = function()
				return string.format('%x%x%x\\n', math.random(0, 65535), math.random(0, 65535), math.random(0, 65535))
			end,
		},
	}
]